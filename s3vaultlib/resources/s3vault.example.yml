---
# This is an example of s3vault configuration file
# the configuration can be included in any yaml file. The s3vault configuration must be declared under the 's3vaultlib'
# object
s3vaultlib:
  vault:
    # S3 bucket must already exist. The bucket policy will be generated by s3vaultlib in the CloudFormation template
    bucket: "my_bucket_example"
  # Here the roles you want to create to access the vault.
  # Typically you need to create a role per instance type so that each instance type can have access only to specific
  # resources in the vault
  roles:
    # Administrative role
    - name: admin_role
      # priviledges to associate to the role. This role can read and write in all the vault.
      privileges: [read, write]
      # Setting the scope of the priviledges. '_all_' means all the path defined in all the roles
      path: _all_
      managed_policies: []
    # Normal role
    - name: webserver
      privileges: [read]
      # KMS Alias to associate to the role. A KMS Key + Alias will be created for the role in order to be able to
      # encrypt secrets and make them accessible and decryptable only for the role that have priviledges to use the
      # specific KMS KEY
      kms_alias: webserver
      # path where the secrets will be stored for this role
      path:
        - webserver/
    - name: mysql_instance
      privileges: [read]
      kms_alias: mysql_instance
      path:
      - mysql_instance/
